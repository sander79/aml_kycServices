server.port=8085
server.servlet.context-path=/amlKycServices
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

spring.profiles.active=mock, local
#spring.profiles.active=[monk / mongo, local / oauth2]


security.secret=secretsanderaml
security.prefix=Bearer
security.headerParam=Authorization


#spring.data.mongodb.uri=mongodb://sandercosmosdb:3cmAYllcdBAnFxKoZght3f4xe0lIgZh0voCbhDcViIeznodQvW10POnRTZ8RooQNoxpyGlNcxqQyEiQ3o9O7rg==@sandercosmosdb.mongo.cosmos.azure.com:10255/sander?ssl=true
#azure.cosmos.key=3cmAYllcdBAnFxKoZght3f4xe0lIgZh0voCbhDcViIeznodQvW10POnRTZ8RooQNoxpyGlNcxqQyEiQ3o9O7rg==
#azure.cosmos.secondaryKey=
#azure.cosmos.queryMetricsEnabled=false

#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=https://dev-55628242.okta.com/oauth2/default/v1/introspect
#spring.security.oauth2.resourceserver.opaquetoken.client-id=0oa72he7ux6u4HwNI5d7
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=JMbbGxcWmpCOY-sX1Gr3LlmhgwKYY1EQFF2yPQRs

# MONGODB CONFIG
spring.data.mongodb.uri=mongodb://127.0.0.1/AML
eclipse log    @Bean public BCryptPasswordEncoder bCryptPasswordEncoder() {
        return new BCryptPasswordEncoder(); 
    }
    ring.data.mongodb.database=AML